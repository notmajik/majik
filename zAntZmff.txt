<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

    

	
	
	 <channel>
	
   


<item>
<title>      [COLOR tomato][B]WELCOME TO MAJIK NINJA IPTV INFO[/B][/COLOR] </title>
<link>$doregex[openDialog]</link>
<regex>
<name>openDialog</name>
<expres><![CDATA[#$pyFunction
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    __addon__ = xbmcaddon.Addon()
    __addonname__ = __addon__.getAddonInfo('name')     
    line1 = "[COLOR tomato][B]WELCOME TO MAJIK NINJA IPTV[/B][/COLOR]"
    line2 = "[COLOR tomato][B]THIS ADDON USES INTERNET SOURCES THAT CAN BE FOUND FREE[/B][/COLOR]"
    line3 = "[COLOR tomato][B]Copyrigt violation issues to the company's hosting these files[/B][/COLOR]" 
    xbmcgui.Dialog().ok(__addonname__, line1, line2, line3)
    return 
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://faygoluvers.net/v5/wp-content/uploads/2014/10/mnetwitter.jpg</thumbnail>
<fanart>https://faygoluvers.net/v5/wp-content/uploads/2014/10/mnetwitter.jpg</fanart>
</item>










<item>
<title>[B][COLOR lime]==KODI====[COLOR blue]======Favourites====[COLOR lime]======[/COLOR][/B]</title>
<link>https://www.tvaddons.ag/forums/$doregex[id]</link>
<regex>
<name>id</name>
<expres>$pyFunction:xbmc.executebuiltin('ActivateWindow(10134)')</expres>
<page></page>
<NOTPlayable>True</NOTPlayable>
</regex>
</item>





 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====CARTOON NETWORK===[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/cartoon%20network</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 

 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====comedy central===[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/comedy%20central</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item> 
<title>[B][COLOR lime]https://m3u.freeiptv.life/2020/11/iptv-servers-iptv-lists-m3u-playlists-13-november-2020_13.html[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
<listrepeat><![CDATA[
<title>[B][COLOR aqua][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=TSDOWNLOADER&amp;name=[makelist2.param2]</link>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.)]]></expres>
<page><![CDATA[https://m3u.freeiptv.life/2020/11/iptv-servers-iptv-lists-m3u-playlists-13-november-2020_13.html]]></page>
<cookieJar></cookieJar>
</regex>   
</item>  
 
 
 
 
 
 
 
<item>
  <title>https://m3u.freeiptv.life/</title>
  <link>$doregex[genre]</link>
  <thumbnail>https://1.bp.blogspot.com/-kJqJFYyox38/X65p_4buBsI/AAAAAAAAOVg/nLiRhvdV9aUo9pjBNZBCPh5QwaLQqRLQwCLcBGAsYHQ/w750-h450-p-k-no-nu/3082a5315a40b8238eefcdabdsfasdfasdf9318f16d%2B%25281%2529.png</thumbnail>
  <regex>
    <name>genre</name>
    <listrepeat><![CDATA[
    <title>[COLOR gold][genre.param2][/COLOR]</title>
    <link>$doregex[lists]</link>
    <thumbnail>[genre.param3]</thumbnail>
    ]]></listrepeat>
    <expres><![CDATA[(?s)<article.+?href="([^"]+)"\s*title="([^"]+)?\s(?:download|daily|free|new|m3u).+?src="([^"]+)]]></expres>
    <page>https://m3u.freeiptv.life/</page>
  </regex>
  <regex>
    <name>lists</name>
    <listrepeat><![CDATA[
    <title>[COLOR gold][lists.param2][/COLOR]</title>
    <link>ignoreme</link>
    <externallink>[lists.param1]$$TSDOWNLOADER$$</externallink>
    <thumbnail>[genre.param3]</thumbnail>
    ]]></listrepeat>
    <expres><![CDATA[<a\s*href="([^"]+m3u)">([^<]+)</a><(?:br|/p)]]></expres>
    <page>[genre.param1]</page>
    <referer>https://m3u.freeiptv.life/</referer>
  </regex>
</item>
 
 
 
<item>
<title>https://m3u.freeiptv.life/</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
  <title>[COLOR snow][makelist.param2][/COLOR]</title>
  <link>$doregex[lists]</link>
  <thumbnail>[makelist.param3]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re
    return re.findall('(?s)<header class="entry-header cf">(?:.*?href=)"([^"]*)">([^<]*)(?:.*?src=")([^"]*)',page_data)
]]></expres>
<page>https://m3u.freeiptv.life/</page>
</regex>
<regex>
<name>lists</name>
<listrepeat><![CDATA[
  <title>[COLOR snow][lists.param2][/COLOR]</title>
  <link>ignoreme</link>
  <externallink>[lists.param1]</externallink>
  <thumbnail>[makelist.param3]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):#cosmix
    import re
    s = page_data.split('<pre>', 1)[-1]
    return re.findall('(?s)<a href="(.*?m3u[^"]*)">Download\s([^<]*)',s)
]]></expres>
<page>[makelist.param1]</page>
<referer>https://m3u.freeiptv.life/</referer>
</regex>
</item>





 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====tv shows=1==[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://tv4.live/api/list/tasmiac7@jvlicenses.com/943421/m3u8/tvshows/1</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====tv shows=2==[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://tv4.live/api/list/haluvejy@inboxbear.com/271871/m3u8/tvshows/2</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====tv shows=3==[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://tv4.live/api/list/haluvejy@inboxbear.com/271871/m3u8/tvshows/3</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item>
<title>movies</title>
<link>ignor</link>
<externallink>https://tv4.live/api/list/haluvejy@inboxbear.com/271871/m3u8/movies</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 

  
<item>
<plugin>
    <title>fox news rockford</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://www.vuit.com/live/12738/wifr%26referer=https://www.vuit.com/live/12738/wifr</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 

 
 
<item>
<title>rick-and-morty</title>
<link>$doregex[getM3U8]</link>
<regex>
<name>getM3U8</name>
<expres>"url":"(.*?)"</expres>
<page>https://www.adultswim.com/api/shows/v1/media/jqX79_YeQkm3I9kHJYGAXA/desktop</page>
<referer>https://www.adultswim.com/streams/rick-and-morty</referer>
<agent>Mozilla/5.0 (Windows NT 6.3; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0</agent>
<cookieJar></cookieJar>
</regex>
</item>
 
 
 
<item>
<title>robot chicken</title>
<link>$doregex[getM3U8]</link>
<regex>
<name>getM3U8</name>
<expres>"url":"(.*?)"</expres>
<page>https://www.adultswim.com/api/shows/v1/media/FeaqiXGYSiuuOMWIxcwKyA/desktop</page>
<referer>https://www.adultswim.com/streams/robot-chicken</referer>
<agent>Mozilla/5.0 (Windows NT 6.3; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0</agent>
<cookieJar></cookieJar>
</regex>
</item>
 
 
<item>
<title>aqua-teen-hunger-force</title>
<link>$doregex[getM3U8]</link>
<regex>
<name>getM3U8</name>
<expres>"url":"(.*?)"</expres>
<page>https://www.adultswim.com/api/shows/v1/media/C0o6M1oAT6Sm2SZ-wqWWaw/desktop</page>
<referer>https://www.adultswim.com/streams/robot-chicken</referer>
<agent>Mozilla/5.0 (Windows NT 6.3; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0</agent>
<cookieJar></cookieJar>
</regex>
</item>
 
 
<item>
<plugin>
    <title>Weather Nation</title><link>http://cdnapi.kaltura.com/p/931702/sp/93170200/playManifest/entryId/1_oorxcge2/format/applehttp/protocol/http/uiConfId/28428751/a.m3u8</link>
    <thumbnail>https://upload.wikimedia.org/wikipedia/en/e/e2/WeatherNation_logo.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<plugin>
    <title>channel 1</title>
    <link>https://stream.allsprk.tv/live/0/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
<item>
<plugin>
    <title>channel 2</title>
    <link>https://stream.allsprk.tv/live/1/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
<item>
<plugin>
    <title>channel 3</title>
    <link>https://stream.allsprk.tv/live/2/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<plugin>
    <title>channel 4</title>
    <link>https://stream.allsprk.tv/live/3/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<plugin>
    <title>channel 5</title>
    <link>https://stream.allsprk.tv/live/4/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<plugin>
    <title>channel 6</title>
    <link>https://stream.allsprk.tv/live/5/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<plugin>
    <title>channel 7</title>
    <link>https://stream.allsprk.tv/live/6/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
 
<item>
<plugin>
    <title>channel 8</title>
    <link>https://stream.allsprk.tv/live/7/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<plugin>
    <title>channel 9</title>
    <link>https://stream.allsprk.tv/live/8/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<plugin>
    <title>channel 10</title>
    <link>https://stream.allsprk.tv/live/9/index.m3u8</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<plugin>
    <title>https://daddylive.live/channels/stream-56.php</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://daddylive.live/channels/stream-56.php%26referer=https://daddylive.live/channels/stream-56.php</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
<item>
<plugin>
    <title>https://daddylive.live/channels/stream-51.php</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://daddylive.live/channels/stream-51.php%26referer=https://daddylive.live/channels/stream-51.php</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
 <item>
<title>PLUTO TV comedy central</title>
<inputstream>https://service-stitcher.clusters.pluto.tv/stitch/hls/channel/5ca671f215a62078d2ec0abf/master.m3u8?advertisingId=&amp;appName=web&amp;appVersion=5.5.1-47ae969efab27ec552faf45ab4c7e4c6a50ac344&amp;architecture=&amp;buildVersion=&amp;clientTime=&amp;deviceDNT=0&amp;deviceId=5c5c3b948002db3c3e0b262e&amp;deviceLat=&amp;deviceLon=&amp;deviceMake=Chrome&amp;deviceModel=Chrome&amp;deviceType=web&amp;deviceVersion=83.0.4103.116&amp;includeExtendedEvents=false&amp;marketingRegion=DE&amp;sid=f2b2e804-98d9-40db-95ed-1215e613a7e0&amp;userId=&amp;serverSideAds=true|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</inputstream>
<thumbnail>https://images.pluto.tv/channels/5ca671f215a62078d2ec0abf/colorLogoPNG.png</thumbnail>
<fanart></fanart>
</item>
 
 
 
<item>
<title>PLUTO TV MOVIES</title>
<inputstream>http://service-stitcher.clusters.pluto.tv/stitch/hls/channel/5c5c3b948002db3c3e0b262e/master.m3u8?advertisingId=&amp;appName=web&amp;appVersion=5.5.1-47ae969efab27ec552faf45ab4c7e4c6a50ac344&amp;architecture=&amp;buildVersion=&amp;clientTime=&amp;deviceDNT=0&amp;deviceId=5c5c3b948002db3c3e0b262e&amp;deviceLat=&amp;deviceLon=&amp;deviceMake=Chrome&amp;deviceModel=Chrome&amp;deviceType=web&amp;deviceVersion=83.0.4103.116&amp;includeExtendedEvents=false&amp;marketingRegion=DE&amp;sid=f2b2e804-98d9-40db-95ed-1215e613a7e0&amp;userId=&amp;serverSideAds=true|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36</inputstream>
<thumbnail>http://images.pluto.tv/channels/5c5c3b948002db3c3e0b262e/thumbnail.jpg?w=250&amp;h=250&amp;fm=jpg&amp;q=75&amp;fit=fill&amp;fill=blur</thumbnail>
<fanart>http://pluto.tv.s3.amazonaws.com/channels/5c5c3b948002db3c3e0b262e/featuredImage.jpg</fanart>
</item>
 
 
<item>
<plugin>
    <title>toonami aftermath est</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://api.toonamiaftermath.com/streamUrl?channelName=est&timezoneOffset=4&useHttps=true%26referer=https://api.toonamiaftermath.com/streamUrl?channelName=est&timezoneOffset=4&useHttps=true</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<plugin>
    <title>toonami aftermath movies</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://api.toonamiaftermath.com/streamUrl?channelName=movies&timezoneOffset=4&useHttps=true%26referer=https://api.toonamiaftermath.com/streamUrl?channelName=movies&timezoneOffset=4&useHttps=true</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
<item>
<plugin>
    <title>toonami aftermath radio</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://api.toonamiaftermath.com/streamUrl?channelName=radio&timezoneOffset=4&useHttps=true%26referer=https://api.toonamiaftermath.com/streamUrl?channelName=radio&timezoneOffset=4&useHttps=true</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
 
 
 
<item>
<plugin>
    <title>[B][COLOR yellow]==MUSIC==[COLOR blue]==VIDEO==[COLOR lime]==CHANNELS==[/COLOR][/B]</title>
    <link>none</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<plugin>
    <title>box hits</title>
<link>http://csm-e.tm.yospace.com/csm/extlive/boxplus01,boxhits-desktop.m3u8?yo.up=http%3a%2f%2fboxtv-origin-elb.cds1.yospace.com%2fuploads%2fboxhits%2f</link>
    <thumbnail>https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Box_hits.svg/1280px-Box_hits.svg.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
<item>
<title>The Box</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='5950'
  url=getUrl('5950',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
<item>
<title>The Box hits</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='5947'
  url=getUrl('5947',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>pop x</title>
<link>http://video.pluto.tv/dash_radio/station28/chunklist.m3u8</link>
<thumbnail></thumbnail>
<fanart></fanart>
</item>
 
 
<item>
<title>the city</title>
<link>http://video.pluto.tv/dash_radio/station49/chunklist.m3u8</link>
<thumbnail></thumbnail>
<fanart></fanart>
</item>
 
 
<item>
<title>country</title>
<link>http://video.pluto.tv/dash_radio/station43/chunklist.m3u8</link>
<thumbnail></thumbnail>
<fanart></fanart>
</item>
 
<item>
<title>90s</title>
<link>http://video.pluto.tv/dash_radio/station62/chunklist.m3u8</link>
<thumbnail></thumbnail>
<fanart></fanart>
</item>
 
 
 
<item>
<title>[B][COLOR lime]====MAJIK====[COLOR tomato]====NINJA==[COLOR tomato]UK==[COLOR lime]======IPTV========[/COLOR][/B]</title>
<link>none</link>
</item>
 
 
 
<item>
<title>5*</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='851'
  url=getUrl('851',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/851/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>5USA</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='845'
  url=getUrl('845',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/845/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>BBC One</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='14'
  url=getUrl('14',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/14/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>BBC Wales</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='3227'
  url=getUrl('3227',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/3227/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>BBC Scotland</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='3166'
  url=getUrl('3166',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/3166/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
<item>
<title>BBC North Ireland</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='361'
  url=getUrl('361',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/361/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
<item>
<title>BBC Two</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='25'
  url=getUrl('25',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/25/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
<item>
<title>BBC News</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='27'
  url=getUrl('27',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/27/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>BBC Parliament</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1666'
  url=getUrl('1666',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1666/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
<item>
<title>BBC Four</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='103'
  url=getUrl('103',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/103/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>CBS Reality</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1808'
  url=getUrl('1808',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1808/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
<item>
<title>CBS Reality +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1811'
  url=getUrl('1811',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1811/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>CBS Drama</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1805'
  url=getUrl('1805',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1805/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
<item>
<title>CBS Action</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1952'
  url=getUrl('1952',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1952/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>Channel 4</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='2'
  url=getUrl('2',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/2/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
<item>
<title>Channel 5</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='22'
  url=getUrl('22',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/22/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>Drama</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='5944'
  url=getUrl('5944',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>E4</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='65'
  url=getUrl('65',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/65/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>Film 4</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='13'
  url=getUrl('13',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/13/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
<item>
<title>Food Network</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='20'
  url=getUrl('20',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>Food Network +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1829'
  url=getUrl('1829',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
<item>
<title>Horror Channel</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='836'
  url=getUrl('836',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/836/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
<item>
<title>itv</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='11'
  url=getUrl('11',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/11/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>itv +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1817'
  url=getUrl('1817',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1817/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>itv2</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='67'
  url=getUrl('67',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/67/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>itv2 +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1820'
  url=getUrl('1820',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1820/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>itv3</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='26'
  url=getUrl('26',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/26/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<title>itv3 +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1823'
  url=getUrl('1823',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1823/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
<item>
<title>itv4</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='101'
  url=getUrl('101',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/101/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>itv4 +1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1826'
  url=getUrl('1826',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1826/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<plugin>
    <title>itvbe</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=https://easyview.eu/script.php?stream=itv%26referer=https://easyview.eu/script.php?stream=itvbe</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<title>itvbe</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='3211'
  url=getUrl('3211',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/3211/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
<item>
<plugin>
    <title>kix</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://www.filmon.com/tv/channel/export?channel_id=316%26referer=http://www.filmon.com</link>
    <thumbnail>https://upload.wikimedia.org/wikipedia/en/6/6d/Kix%21_%28TV_channel_-_logo%29.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
<item>
<title>More 4</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='97'
  url=getUrl('97',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/97/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
<item>
<plugin>
    <title>MelloTv</title>
    <link>https://wowzaprod133-i.akamaihd.net/hls/live/577385/a1e0ad3f/playlist.m3u8</link>
    <thumbnail>http://www.mellotv.com/uc/Mello%203D%20Logo.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<item>
    <title>PBS</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://www.arconaitv.co/stream.php?id=71%26referer=http://www.arconaitv.co</link>
    <thumbnail>https://lh3.googleusercontent.com/FI1LZe31btig4vA_rXer5BcuA36yb_qKtILoXrG9rMVn0e1PyAk4dKR5J3YMAMnAOxk=w300</thumbnail>
    <fanart></fanart>
    </item>
 
 
 
 
 
 
<item>
    <title>PBS KIDS 1</title>
    <link>http://live-cdn.pbskids.org/out/u/est.m3u8</link>
    <thumbnail>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</thumbnail>
    <fanart>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</fanart>
    </item>
 
 
<item>
    <title>PBS KIDS 2</title>
    <link>https://live-cdn.pbskids.org/out/u/aim/koce.m3u8</link>
    <thumbnail>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</thumbnail>
    <fanart>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</fanart>
    </item>
 
 
<item>
    <title>PBS KIDS 3</title>
    <link>https://live-cdn.pbskids.org/out/u/aim/wtvs_3.m3u8</link>
    <thumbnail>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</thumbnail>
    <fanart>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</fanart>
    </item>
 
 
 
<item>
    <title>PBS KIDS 4</title>
    <link>https://live-cdn.pbskids.org/out/u/aim/wttw.m3u8</link>
    <thumbnail>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</thumbnail>
    <fanart>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</fanart>
    </item>
 
 
 
<item>
    <title>PBS KIDS 5</title>
    <link>https://live-cdn.pbskids.org/out/u/aim/wpne.m3u8</link>
    <thumbnail>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</thumbnail>
    <fanart>https://valleypbs.org/wp-content/uploads/2015/04/PBS-Kids-e1456355090352.png</fanart>
    </item>
 
 
 
 
 
 
 
<item>
<title>pick tv</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='371'
  url=getUrl('371',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<plugin>
    <title>POP</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://www.filmon.com/tv/channel/export?channel_id=320%26referer=http://www.filmon.com</link>
    <thumbnail>https://upload.wikimedia.org/wikipedia/en/6/68/Pop_%28UK_TV_channel%29_logo.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
<item>
<title>Really</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='372'
  url=getUrl('372',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/372/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
<item>
<title>Really TV</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='2798'
  url=getUrl('2798',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/2798/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
<item>
<plugin>
    <title>Redbull Tv</title>
    <link>http://rbtvdiglinear-i.akamaihd.net/hls/live/241719/ATfallback/master.m3u8</link>
    <thumbnail>https://i.imgur.com/A4GMBN6.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
 
<item>
<plugin>
    <title>Tiny Pop</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://www.filmon.com/tv/channel/export?channel_id=318%26referer=http://www.filmon.com</link>
    <thumbnail>https://upload.wikimedia.org/wikipedia/en/6/6e/Tiny_Pop_2011_logo.png</thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
<item>
<title>Travel Channel+1</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='842'
  url=getUrl('842',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail></thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
<item>
<title>truTV</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='3707'
  url=getUrl('3707',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/3707/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
 
 
<item>
<title>Yesterday</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=$doregex[get-url]</link>
<regex>
<name>get-url</name>
<expres><![CDATA[#$pyFunction
def getCookiesString(cookieJar):
    try:
        cookieString=""
        for index, cookie in enumerate(cookieJar):
            cookieString+=cookie.name + "=" + cookie.value +";"
    except: pass
    #print 'cookieString',cookieString
    return cookieString
 
def f4mcallback(param, type, error, Cookie_Jar, url, headers):
  if type==1:
    newurl=getUrl(param,Cookie_Jar)
    oldservername=url.split('/')[2]
    newserver=newurl.split('/')
    newserver[2]=oldservername
    newurl='/'.join(newserver)
    return newurl,Cookie_Jar
  else:
    return '',None
 
def getUrl(param, Cookie_Jar):
  import requests, re, urllib, inspect
  headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}
  url = 'http://www.filmon.com/tv/channel/export?channel_id='+param
  session = requests.session()
  session.cookies = Cookie_Jar
  source= session.get(url, headers = headers)
  swf = re.findall('streamer":"(.*?)"', source.text)[0]
  cleanswf = swf.replace('\\/','/')
  referer = 'http://www.filmon.com' + cleanswf
  refpage = 'https://www.filmon.com/'
  page = requests.get(refpage)
  headers1 = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0', 'Referer': refpage, 'X-Requested-With': 'XMLHttpRequest', 'Cookie': str(page.cookies)}
  params = {'channel_id': param, 'quality': 'high'}
  url2 = 'https://www.filmon.com/ajax/getChannelInfo'
  source1 = requests.post(url2, params=params, headers=headers1).text
  return re.findall('"high","url":"([^"]+)"', source1)[0].replace('\/', '/')
 
def GetLSProData(page_data,Cookie_Jar,m):
  import os,urllib
  callbackfunction=os.path.realpath(__file__)
  callbackparam='1039'
  url=getUrl('1039',Cookie_Jar)
  referer = 'http://www.filmon.com/'
  print 'url',url
  return urllib.quote_plus (url + '|Referer=' + referer+'&cookie='+getCookiesString(Cookie_Jar)+'&User-Agent=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36') +'&callbackpath='+urllib.quote_plus(callbackfunction)+'&callbackparam='+urllib.quote_plus(callbackparam)
]]></expres>
<page></page>
<cookieJar></cookieJar>
<thumbnail>https://static.filmon.com/assets/channels/1039/big_logo.png</thumbnail>
<fanart>https://topigsnorsvin.com/wp-content/uploads/2014/10/uk-flag.jpg</fanart></item>
 
 
 
 
 
 
 
<item>
<title>[COLOR red]Majik Ninja IPTV[/COLOR]</title>
<link>ignor</link>
<externallink>https://pastebin.com/raw/TvfjzngA</externallink>
<thumbnail>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item>
<title>[COLOR red]FLUXUS IPTV[/COLOR]</title>
<link>ignor</link>
<externallink>https://pastebin.com/raw/ZzGTySZE</externallink>
<thumbnail>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
<item>
<title>[COLOR red]CCLOUD IPTV[/COLOR]</title>
<link>ignor</link>
<externallink>http://ccld.io/atom.m3u</externallink>
<thumbnail>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]======LIVE TV====[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://pastebin.com/raw/mp3ci8bt</externallink>
<thumbnail>https://pbs.twimg.com/profile_images/1027251801270177792/bdQpKIyD_400x400.jpg</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
 
<item> 
<title>[B][COLOR lime]==PREMIUM====[COLOR blue]======USA==AND=UK=[COLOR lime]====IPTV==[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail></thumbnail>
<fanart></fanart>
<listrepeat><![CDATA[
<title>[B][COLOR red][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=HLSRETRY&amp;name=[makelist2.param2]</link>
<thumbnail></thumbnail>
<fanart></fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.*m3u8)]]></expres>
<page><![CDATA[https://pastebin.com/raw/a1dSwKJ8]]></page>
<cookieJar></cookieJar>
</regex>   
</item>
 
 
 
 
 
 
 
<item> 
<title>[B][COLOR lime]==PREMIUM====[COLOR red]====WORLD====[COLOR lime]====IPTV==[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>http://quiztoday.org/wp-content/uploads/2015/06/iStock_000018582428Medium-520x245.jpg</fanart>
<listrepeat><![CDATA[
<title>[B][COLOR aqua][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=TSDOWNLOADER&amp;name=[makelist2.param2]</link>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>http://quiztoday.org/wp-content/uploads/2015/06/iStock_000018582428Medium-520x245.jpg</fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.*ts)]]></expres>
<page><![CDATA[http://bestbuyiptv.link:6969/sozcvit@mail.ru/zbvhkmnbt1/18032&output=mpegts]]></page>
<cookieJar></cookieJar>
</regex>   
</item>  
 
 
 
<item> 
<title>[B][COLOR lime]==DAILY====[COLOR blue]==UK==AND==USA====[COLOR lime]====IPTV==[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
<listrepeat><![CDATA[
<title>[B][COLOR aqua][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=TSDOWNLOADER&amp;name=[makelist2.param2]</link>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.*ts)]]></expres>
<page><![CDATA[https://pastebin.com/raw/a1dSwKJ8]]></page>
<cookieJar></cookieJar>
</regex>   
</item>  
 
 
 
 
 
 
 
 
 
 
<item> 
<title>[B][COLOR lime]==PREMIUM====[COLOR blue]======test====[COLOR lime]====IPTV==[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail></thumbnail>
<fanart></fanart>
<listrepeat><![CDATA[
<title>[B][COLOR red][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=HLSRETRY&amp;name=[makelist2.param2]</link>
<thumbnail></thumbnail>
<fanart></fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.*m3u8)]]></expres>
<page><![CDATA[]]></page>
<cookieJar></cookieJar>
</regex>   
</item>
 
 
 
 
 
<item>
<title>regex https://ustvgo.tv/cartoon-network/</title>          
<link>$doregex[getUrl]</link>
<regex>
<name>getUrl</name>
<expres><![CDATA[#$pyFunction
import re,requests
def GetLSProData(page_data,Cookie_Jar,m):#streamwatcher2013
  from urlresolver.plugins.lib import jsunpack   # If you have urlresolver
#  from resolveurl.plugins.lib import jsunpack   # If you have resoleUrl
  source=requests.get('https://ustvgo.tv/cartoon-network/',headers={'user-agent':'Mozilla/5.0','referer':'https://ustvgo.tv/cartoon-network/'}).content
  source=requests.get(re.findall('id="player"[\w\W]*?src="([^"]+)',source)[0],headers={'user-agent':'Mozilla/5.0','referer':'https://ustvgo.tv/cartoon-network/'}).content
  packed=re.findall('(eval.*m3u8.*)',source)[0];gm3u8=jsunpack.unpack(packed)#.replace('\\', '')
  return re.findall('src:\s*[\'"]([^\'"]+)',m3u8)[0]+'|user-agent=Mozilla/5.0&referer=https://ustvgo.tv/cartoon-network/'
]]></expres>
<page></page>
</regex>
</item>
 
 
 
<item>
<title>CN</title>
<thumbnail></thumbnail>
<link>$doregex[getURL]|User-Agent=iPad</link>
<regex>
<name>getURL</name>
<expres>file:\s"(.*?)"</expres>
<page>https://ustvgo.tv/cartoon-network</page>
<referer></referer>
</regex>
</item>
 
 
<item>
<title>[COLOR lime][B]M3U DATA[/B][/COLOR]</title>
<link>$doregex[makelist]|User-Agent=Android</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lime][B][makelist.param1][/B][/COLOR]</title>
<link>[makelist.param2]</link>
]]></listrepeat>
<expres><![CDATA[,([^']+)\n([^']+)]]></expres>
<page>https://XML_Streaming_Data/</page>
<cookieJar></cookieJar>
</regex>
</item>
 
 
 
<item>
<title>CN123</title>
<link>plugin://plugin.video.f4mTester/?url=$doregex[getM3U8]|User-Agent=iPad&amp;streamtype=HLSRETRY</link>
<regex>
<name>getM3U8</name>
<expres>value="(http.*?)"</expres>
<page>https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/cartoon%20network</page>
</regex>
</item>
 
 
 
 
 
 
 
 
 
 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====CARTOON NETWORK===[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/cartoon%20network</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====tv shows===[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink></externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item>
<title>[B][COLOR lime]==========[COLOR blue]=====comedy central===[COLOR lime]==============[/COLOR][/B]</title>
<link>ignor</link>
<externallink>https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/comedy%20central</externallink>
<thumbnail></thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
<item> 
<title>[B][COLOR lime]==DAILY====[COLOR blue]==UK==AND==USA====[COLOR lime]====IPTV==[/COLOR][/B]</title>             
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
<listrepeat><![CDATA[
<title>[B][COLOR aqua][makelist2.param2][/COLOR][/B]</title> 
<link>plugin://plugin.video.f4mTester/?url=[makelist2.param3]&amp;streamtype=TSDOWNLOADER&amp;name=[makelist2.param2]</link>
<thumbnail>https://3.bp.blogspot.com/-Rt7PuVBDTXs/Wj1hDDEV4QI/AAAAAAAAAdk/P2T8g9z6-WgQ4hQBI7cIfXQDGl-xNrmJgCLcBGAs/s1700/premium..%2Blist-iptv.com.png</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>    
]]></listrepeat>
<expres><![CDATA[#EXTINF:(.*),(.*)\s(http.*://(.*)/live.)]]></expres>
<page><![CDATA[https://demo.kodi.al/Streaming/Mixed_TV/Mixed_IPTV_Builder/Kodi.php?url=https://hlscat.com/united%20states%20of%20america/s/cartoon%20network]]></page>
<cookieJar></cookieJar>
</regex>   
</item>  
 
 
 
 
 
 
 
<item>
  <title>Daily List</title>
  <link>$doregex[genre]</link>
  <thumbnail>https://www.dailyiptvlist.com/wp-content/uploads/2017/02/logo0001.png</thumbnail>
  <regex>
    <name>genre</name>
    <listrepeat><![CDATA[
    <title>[COLOR gold][genre.param2][/COLOR]</title>
    <link>$doregex[lists]</link>
    <thumbnail>[genre.param3]</thumbnail>
    ]]></listrepeat>
    <expres><![CDATA[(?s)<article.+?href="([^"]+)"\s*title="([^"]+)?\s(?:download|daily|free|new|m3u).+?src="([^"]+)]]></expres>
    <page>http://www.dailyiptvlist.com/</page>
  </regex>
  <regex>
    <name>lists</name>
    <listrepeat><![CDATA[
    <title>[COLOR gold][lists.param2][/COLOR]</title>
    <link>ignoreme</link>
    <externallink>[lists.param1]$$TSDOWNLOADER$$</externallink>
    <thumbnail>[genre.param3]</thumbnail>
    ]]></listrepeat>
    <expres><![CDATA[<a\s*href="([^"]+m3u)">([^<]+)</a><(?:br|/p)]]></expres>
    <page>[genre.param1]</page>
    <referer>http://www.dailyiptvlist.com/</referer>
  </regex>
</item>
 
 
 
<item>
<title>http://www.dailyiptvlist.com/</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
  <title>[COLOR snow][makelist.param2][/COLOR]</title>
  <link>$doregex[lists]</link>
  <thumbnail>[makelist.param3]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re
    return re.findall('(?s)<header class="entry-header cf">(?:.*?href=)"([^"]*)">([^<]*)(?:.*?src=")([^"]*)',page_data)
]]></expres>
<page>http://www.dailyiptvlist.com/</page>
</regex>
<regex>
<name>lists</name>
<listrepeat><![CDATA[
  <title>[COLOR snow][lists.param2][/COLOR]</title>
  <link>ignoreme</link>
  <externallink>[lists.param1]</externallink>
  <thumbnail>[makelist.param3]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):#cosmix
    import re
    s = page_data.split('<pre>', 1)[-1]
    return re.findall('(?s)<a href="(.*?m3u[^"]*)">Download\s([^<]*)',s)
]]></expres>
<page>[makelist.param1]</page>
<referer></referer>
</regex>
</item>
 
 
 
 
 
<item>
<title>http://crackstreams.com/</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
  <title>[COLOR gold][makelist.param2][/COLOR]</title>
  <link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('href="/(.*?)">([^\s]+)',re.findall('"nav navbar-nav">(?s)(.*?)</ul',page_data)[0])
]]></expres>
<page>http://crackstreams.com/</page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
  <title>[COLOR gold][makelist2.param3]/COLOR]</title>
  <link>$doregex[getUrl]</link>
  <thumbnail>http://crackstreams.com/[makelist2.param2]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('(?s)href=[\'"]([^\'"]+).+?(imag[^\'"]+).+?media-heading.>([^<]+)',re.findall('Schedule</h1>(?s)(.*?)(?:"text-center|<h2)',page_data)[0])
]]></expres>
<page>http://crackstreams.com/[makelist.param1]</page>
<referer>http://crackstreams.com/</referer>
</regex>
<regex>
<name>getUrl</name>
<expres><![CDATA[#$pyFunction
import re,requests
def GetLSProData(page_data,Cookie_Jar,m):
  link=re.findall('<iframe.+?src=[\'"]([^\'"]+)',page_data)[0]
  source=requests.get(link,headers={'user-agent':'Mozilla/5.0','referer':'[makelist2.param1]','accept':'*/*'}.content
  return re.findall('id=.vid[\w\W]*?(?:source|src|file):\s*[\'"]([^\'"]+)',source)[0]+'|user-agent=ipad&referer='+link
]]></expres>
<page>[makelist2.param1]</page>
<referer>http://crackstreams.com/[makelist.param1]</referer>
</regex>
</item>
 
 
 
 
<item>
<title>NBA: Indiana Pacers vs Denver Nuggets (8:00 PM EST)</title>
<link>$doregex[getUrl]</link>
<regex>
<name>getUrl</name>
<expres><![CDATA[#$pyFunction
import re,requests
def GetLSProData(page_data,Cookie_Jar,m):
  link=re.findall('<iframe.+?src=[\'"]([^\'"]+)',page_data)[0]
  if 'crackstreams' in link:
    source=requests.get(link,headers={'user-agent':'Mozilla/5.0','referer':'http://nbastreams.xyz/live/2/','accept':'*/*'}).content
    return re.findall('Clappr.Player[\w\W]*?(?:source|src|file):\s*[\'"]([^\'"]+)',source)[0]+'|user-agent=ipad&referer='+link
  else:
    link='http://nbastreams.xyz/live/2/'+link
    source=requests.get(link,headers={'user-agent':'Mozilla/5.0','referer':'http://nbastreams.xyz/live/2/','accept':'*/*'}).content
    return re.findall('Clappr.Player[\w\W]*?(?:source|src|file):\s*[\'"]([^\'"]+)',source)[0]+'|user-agent=ipad&referer='+link
]]></expres>
<page>http://nbastreams.xyz/live/2/</page>
<referer>http://crackstreams.com/nbastreams/</referer>
</regex>
</item>
 
 
<item>
<plugin>
    <title>nba 1</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://nbastreams.xyz/live/1/%26referer=http://crackstreams.com/nbastreams</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
<item>
<plugin>
    <title>nba 2</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://nbastreams.xyz/live/2/%26referer=http://crackstreams.com/nbastreams</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
<item>
<plugin>
    <title>nba 3</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://nbastreams.xyz/live/3/%26referer=http://crackstreams.com/nbastreams</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
<item>
<plugin>
    <title>nba 4</title>
    <link>plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26url=http://nbastreams.xyz/live/4/%26referer=http://crackstreams.com/nbastreams</link>
    <thumbnail></thumbnail>
    <fanart></fanart>
</plugin>
</item>
 
 
 
 
 
<item>
<title>regex https://ustvgo.tv/cartoon-network/</title>          
<link>$doregex[getUrl]</link>
<regex>
<name>getUrl</name>
<expres><![CDATA[#$pyFunction
import re,requests
def GetLSProData(page_data,Cookie_Jar,m):#streamwatcher2013
  from urlresolver.plugins.lib import jsunpack   # If you have urlresolver
#  from resolveurl.plugins.lib import jsunpack   # If you have resoleUrl
  source=requests.get('https://ustvgo.tv/cartoon-network/',headers={'user-agent':'Mozilla/5.0','referer':'https://ustvgo.tv/cartoon-network/'}).content
  source=requests.get(re.findall('id="player"[\w\W]*?src="([^"]+)',source)[0],headers={'user-agent':'Mozilla/5.0','referer':'https://ustvgo.tv/cartoon-network/'}).content
  packed=re.findall('(eval.*m3u8.*)',source)[0];gm3u8=jsunpack.unpack(packed)#.replace('\\', '')
  return re.findall('src:\s*[\'"]([^\'"]+)',m3u8)[0]+'|user-agent=Mozilla/5.0&referer=https://ustvgo.tv/cartoon-network/'
]]></expres>
<page></page>
</regex>
</item>
 
 
 
 
 
 
 
<item>
<title>tom and jerry 24/7</title>
<link>http://ws.flv.nimo.tv/live/su1599512427554r538093ee8e9c2edd24251f82cda6fd16_high.flv</link>
<thumbnail>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</thumbnail>
<fanart>https://pbs.twimg.com/profile_images/714930557164068864/CtSowBUJ.jpg</fanart>
</item>
 
 
 
 
<item>
<title>south-park</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/south-park-us',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
<item>
<title>adventure-time-hd</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/adventure-time-hd',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>rick-and-morty</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/rick-and-morty',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
<item>
<title>simpsons</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/simpsons',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
 
<item>
<title>always-sunny-in-philadelphia</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/always-sunny-in-philadelphia',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
<item>
<title>futurama</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/futurama',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>the-office</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/the-office',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>scrubs</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/scrubs',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
 
 
<item>
<title>brickleberry</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/brickleberry',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>triptank</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/triptank',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
<item>
<title>aqua-teen-hunger-force</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/aqua-teen-hunger-force',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
<item>
<title>friends</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/friends',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
<item>
<title>workaholics</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/workaholics',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
<item>
<title>himym</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/himym',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
<item>
<title>the-big-bang-theory</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/the-big-bang-theory',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
<item>
<title>the-cleveland-show</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/the-cleveland-show',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>archer</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/archer',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
 
<item>
<title>king-of-the-hill</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/king-of-the-hill',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
 
<item>
<title>the community</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/greendale-college',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
<item>
<title>house-md</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/house-md',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
 
<item>
<title>south-park</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/south-park',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>
 
 
 
 
<item>
<title>family-guy</title>
<link>$doregex[loadcookie]$doregex[getmainPage]$doregex[savecookie]|User-Agent=Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</link>
 
<regex>
<name>savecookie</name>
<expres></expres>
<page></page>
<cookieJar>save[stream4Free.lwp]</cookieJar>
</regex>
 
<regex>
<name>getmainPage</name>
<expres>source src="(.*?)"</expres>
<page>$pyFunction: unCaptcha.performCaptcha('https://www.stream4free.live/family-guy',Cookie_Jar,returnpage=True,captcharegex='sitekey: "(.*?)"')</page>
<agent>Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0</agent>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>loadcookie</name>
<expres></expres>
<page></page>
<cookieJar>open[stream4Free.lwp]</cookieJar>
</regex>
 
</item>













    </channel>
